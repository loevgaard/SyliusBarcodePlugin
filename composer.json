{
    "name": "loevgaard/sylius-barcode-plugin",
    "type": "sylius-plugin",
    "description": "Add barcodes to your products using this plugin",
    "license": "MIT",
    "require": {
        "php": "^7.3",
        "setono/doctrine-orm-batcher-bundle": "^0.3.1",
        "sylius/core-bundle": "^1.0",
        "symfony/config": "^4.4 || ^5.0",
        "symfony/dependency-injection": "^4.4 || ^5.0",
        "symfony/event-dispatcher": "^4.4 || ^5.0",
        "symfony/http-kernel": "^4.4 || ^5.1.5",
        "symfony/messenger": "^4.4 || ^5.0",
        "thecodingmachine/safe": "^1.0",
        "violuke/php-barcodes": "^1.0"
    },
    "require-dev": {
        "api-platform/core": "^2.5",
        "doctrine/persistence": "^1.3.8",
        "lexik/jwt-authentication-bundle": "^2.8",
        "phpspec/phpspec": "^6.2",
        "phpunit/phpunit": "^9.2",
        "roave/security-advisories": "dev-master",
        "sensiolabs/security-checker": "^5.0",
        "setono/code-quality-pack": "^1.4",
        "setono/sylius-behat-pack": "^0.1.0",
        "sylius/sylius": "^1.8",
        "symfony/browser-kit": "^4.4 || ^5.0",
        "symfony/debug-bundle": "^4.4 || ^5.0",
        "symfony/dotenv": "^4.4 || ^5.0",
        "symfony/intl": "^4.4 || ^5.0",
        "symfony/maker-bundle": "^1.15",
        "symfony/property-info": "^5.0",
        "symfony/serializer": "^5.0",
        "symfony/web-profiler-bundle": "^4.4 || ^5.0"
    },
    "config": {
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.4-dev"
        }
    },
    "autoload": {
        "psr-4": {
            "Loevgaard\\SyliusBarcodePlugin\\": "src/",
            "Tests\\Loevgaard\\SyliusBarcodePlugin\\": "tests/"
        }
    },
    "autoload-dev": {
        "classmap": [
            "tests/Application/Kernel.php"
        ]
    },
    "prefer-stable": true,
    "scripts": {
        "all": [
            "@checks",
            "@tests"
        ],
        "analyse": "vendor/bin/phpstan analyse -c phpstan.neon -l max src/",
        "assets": [
            "@ensure-assets-installed",
            "@ensure-assets-compiled"
        ],
        "behat": [
            "SYMFONY_ENV=test composer ensure-database-ready",
            "SYMFONY_ENV=test composer ensure-env-copied",
            "vendor/bin/behat --tags=\"~@javascript\" --no-interaction --format=progress"
        ],
        "check-style": "vendor/bin/ecs check src/ spec/",
        "checks": [
            "composer validate --strict",
            "composer normalize --dry-run",
            "@check-style",
            "@analyse"
        ],
        "ensure-assets-compiled": "[[ -d tests/Application/public/assets ]] || (cd tests/Application && yarn build && composer ensure-env-copied && bin/console assets:install public -e ${SYMFONY_ENV:-'dev'})",
        "ensure-assets-installed": "[[ -d tests/Application/node_modules ]] || (cd tests/Application && yarn install)",
        "ensure-database-created": "composer ensure-env-copied && (cd tests/Application && bin/console doctrine:database:create --if-not-exists -e ${SYMFONY_ENV:-'dev'})",
        "ensure-database-ready": [
            "@ensure-database-created",
            "@ensure-schema-updated"
        ],
        "ensure-env-copied": "([[ ${SYMFONY_ENV:-'dev'} == 'dev' ]] && composer ensure-env-dev-copied) || ([[ ${SYMFONY_ENV:-'dev'} == 'test' ]] && composer ensure-env-test-copied) || echo 'Unknown environment ${SYMFONY_ENV}'",
        "ensure-env-dev-copied": "(cd tests/Application && ([[ -f .env.dev.local ]] || cp .env  .env.dev.local))",
        "ensure-env-test-copied": "(cd tests/Application && ([[ -f .env.test.local ]] || cp .env.test .env.test.local))",
        "ensure-schema-updated": "composer ensure-env-copied && (cd tests/Application && bin/console doctrine:schema:update --force -e ${SYMFONY_ENV:-'dev'})",
        "ensure-vendors-installed": "[[ -f vendor/autoload.php ]] || php -d memory_limit=-1 /usr/local/bin/composer install",
        "fix-style": "vendor/bin/ecs check src/ spec/ --fix",
        "fixtures": [
            "@ensure-database-ready",
            "(cd tests/Application && bin/console sylius:fixtures:load --no-interaction -e ${SYMFONY_ENV:-'dev'})"
        ],
        "phpspec": "vendor/bin/phpspec run",
        "phpunit": "vendor/bin/phpunit",
        "server-run": [
            "@ensure-env-copied",
            "(cd tests/Application && symfony server:start --daemon)"
        ],
        "tests": [
            "@phpspec",
            "@phpunit",
            "@behat"
        ],
        "try": [
            "@ensure-vendors-installed",
            "@assets",
            "@fixtures",
            "@server-run"
        ]
    }
}
